,input,acp,output
0,"The system retrieves and displays the Student’s current schedule (e.g., the schedule for the current semester).",1,{decision: allow; subject: system; action: retrieve; resource: student’s current schedule; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: student’s current schedule; purpose: none; condition: none}
1,The system cancels the course offering for each schedule that contains it.,1,{decision: allow; subject: system; action: cancel; resource: course offerings; purpose: none; condition: none}
2,"The system requests that the Registrar specify the function he or she would like to perform (either Add a Student, Update a Student, or Delete a Student)",1,{decision: allow; subject: registrar; action: add; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: update; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: delete; resource: student; purpose: none; condition: none}
3,"The Professor can either resolve the schedule conflict (i.e., by canceling his selection to teach one of the course offerings), or cancel the operation, in which case, any selections will be lost, and the use case ends.",1,{decision: allow; subject: professor; action: resolve; resource: schedule conflict; purpose: none; condition: none | decision: allow; subject: professor; action: cancel; resource: operation; purpose: none; condition: none}
4,They will also need to see which students signed up for their course offerings.,1,{decision: allow; subject: they; action: see; resource: students signed up for their course offerings; purpose: none; condition: none}
5,"If no alternates are available, then no substitution will be made.",1,{decision: allow; subject: none; action: make; resource: substitution; purpose: none; condition: no alternates are available}
6,The Student also selects any course offerings to delete from the existing schedule.,1,{decision: allow; subject: student; action: delete; resource: course offerings; purpose: none; condition: none}
7,"If a course offering becomes full while a student is building a schedule including that offering, the student must be notified.",1,{decision: allow; subject: none; action: notify; resource: student; purpose: none; condition: course offering becomes full while a student is building a schedule including that offering}
8,Only Professors can enter grades for students.,1,{decision: allow; subject: professors; action: enter; resource: grades; purpose: none; condition: none}
9,The professor selects possibly and possibly de-selects the course offerings that he or she wishes to teach for the upcoming semester.,1,{decision: allow; subject: professor; action: select; resource: course offerings that professor to teach for the upcoming semester; purpose: none; condition: none | decision: allow; subject: professor; action: de-select; resource: course offerings that professor to teach for the upcoming semester; purpose: none; condition: none}
10,The professor is added to the system.,1,{decision: allow; subject: none; action: add; resource: professor; purpose: none; condition: none}
11,The Student selects 4 primary course offerings and 2 alternate course offerings from the list of available offerings.,1,{decision: allow; subject: student; action: select; resource: 4 primary course offerings; purpose: none; condition: none | decision: allow; subject: student; action: select; resource: 2 alternate course offerings; purpose: none; condition: none}
12,This use case allows the Registrar to maintain student information in the registration system.,1,{decision: allow; subject: registrar; action: maintain; resource: student information in the registration system; purpose: none; condition: none}
13,The Student verifies the deletion.,1,{decision: allow; subject: student; action: verify; resource: the deletion; purpose: none; condition: none}
14,"If, in the Update a Professor  or Delete a Professor sub-flows, a professor with the specified id number does not exist, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: professor with the specified id number does not exist in the update a professor  or delete a professor sub-flows}
15,Professors will be able to access the system to sign up to teach courses as well as record grades.,1,{decision: allow; subject: professors; action: access; resource: system; purpose: sign up to teach courses; condition: none | decision: allow; subject: professors; action: access; resource: system; purpose: record grades; condition: none}
16,"If, in the Update a Student  or Delete a Student  sub-flows, a student with the specified id number does not exist, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the update a student  or delete a student  sub-flows_ a student with the specified id number does not exist}
17,"If, in the Delete A Professor sub-flow, the Registrar decides not to delete the professor, the delete is cancelled, and the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a professor sub-flow_ the registrar decides not to delete the professor_ the delete is cancelled}
18,"For each selected course offering on the schedule not already marked as “enrolled in”, the system verifies that the Student has the necessary prerequisites, that the course offering is open, and that there are no schedule conflicts.",1,{decision: allow; subject: system; action: verify; resource: necessary prerequisites; purpose: none; condition: none | decision: allow; subject: system; action: verify; resource: course offerings; purpose: none; condition: none | decision: allow; subject: system; action: verify; resource: schedule conflicts; purpose: none; condition: none}
19,"If, in the Update a Schedule or Delete a Schedule sub-flows, the system is unable to retrieve the Student’s schedule, an error message is displayed.",1,{decision: allow; subject: none; action: display; resource: error message; purpose: none; condition: in the update a schedule or delete a schedule sub-flows_ the system is unable to retrieve the student’s schedule}
20,The system requests that the Registrar enter the professor id,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
21,"At the end of the semester, the student will be able to access the system to view an electronic report card.",1,{decision: allow; subject: student; action: access; resource: system; purpose: view an electronic report card; condition: none}
22,The system requests that the Registrar enter the student id.,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
23,"For each student on the list, the Professor enters a grade: A, B, C, D, F, or I.  The system records the student’s grade for the course offering.",1,{decision: allow; subject: professor; action: enter; resource: grade; purpose: none; condition: none}
24,The system deletes the student from the system.,1,{decision: allow; subject: system; action: delete; resource: student; purpose: none; condition: none}
25,"In addition, each student will indicate two alternative choices in case the student cannot be assigned to a primary selection.",1,{decision: allow; subject: student; action: indicate; resource: two alternative choices; purpose: none; condition: student cannot be assigned to a primary selection}
26,The system displays a list of course offerings the Professor taught in the previous semester.,1,{decision: allow; subject: system; action: display; resource: list of course offerings the professor taught in the previous semester; purpose: none; condition: none}
27,"The Registrar can then enter a different id number or cancel the operation, at which point the use case ends.",1,{decision: allow; subject: registrar; action: enter; resource: different id number; purpose: none; condition: none | decision: allow; subject: registrar; action: cancel; resource: operation; purpose: none; condition: none}
28,"If there is no conflict, the system updates the course offering information for each offering the professor selects (i.e., records the professor as the instructor for the course offering).",1,{decision: allow; subject: system; action: update; resource: course offering information; purpose: none; condition: there is no conflict}
29,"If the Registrar selected “Update a Student”, the Update a Student  subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: update a student  subflow; purpose: none; condition: registrar selected “update a student”}
30,"If the Registrar selected “Add a Student”, the Add a Student  subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: add a student subflow; purpose: none; condition: registrar selected “add a student”}
31,"The Student can either select a different course offering and the use case continues, save the schedule, as is (see Save a Schedule subflow), or cancel the operation, at which point the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: student; action: select; resource: different course offering; purpose: none; condition: none | decision: allow; subject: student; action: save; resource: schedule; purpose: none; condition: none | decision: allow; subject: student; action: cancel; resource: operation; purpose: none; condition: none}
32,"If, in the Basic Flow, the professor is not eligible to teach any course offerings in the upcoming semester, the system will display an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the basic flow_ the professor is not eligible to teach any course offerings in the upcoming semester}
33,The system requests that the Registrar enter the professor information.,1,{decision: allow; subject: registrar; action: enter; resource: professor information; purpose: none; condition: none}
34,This use case allows a Professor to submit student grades for one or more classes completed in the previous semester.,1,{decision: allow; subject: professor; action: submit; resource: student grades; purpose: none; condition: none}
35,"If the Professor wishes to skip a particular student, the grade information can be left blank and filled in at a later time.",1,{decision: allow; subject: professor; action: leave; resource: grade information; purpose: none; condition: professor wishes to skip a particular student | decision: allow; subject: professor; action: fill in; resource: grade information; purpose: none; condition: professor wishes to skip a particular student}
36,"Once the registration process is completed for a student, the registration system sends information to the billing system so the student can be billed for the semester.",1,{decision: allow; subject: registration system; action: send; resource: information; purpose: student can be billed for the semester; condition: registration process is completed for a student}
37,The Professor selects a course offering.,1,{decision: allow; subject: professor; action: select; resource: course offering; purpose: none; condition: none}
38,The schedule is saved in the system.,1,{decision: allow; subject: none; action: save; resource: schedule; purpose: none; condition: none}
39,The system also retrieves and displays the list of courses the professor has previously selected to teach.,1,{decision: allow; subject: system; action: retrieve; resource: list of courses the professor has previously selected to teach; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of courses the professor has previously selected to teach; purpose: none; condition: none}
40,"If, in the Submit Schedule sub-flow, the system determines that the Student has not satisfied the necessary prerequisites, or that the selected course offering is full, or that there are schedule conflicts, an error message is displayed.",1,{decision: allow; subject: none; action: display; resource: error message; purpose: none; condition: in the submit schedule sub-flow_ the system determines that the student has not satisfied the necessary prerequisites_ or that the selected course offering is full_ or that there are schedule conflicts}
41,The system retrieves and displays the student information.,1,{decision: allow; subject: system; action: retrieve; resource: student information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: student information; purpose: none; condition: none}
42,"If, in the Delete A Student  sub-flow, the Registrar decides not to delete the student, the delete is cancelled and the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a student  sub-flow_ the registrar decides not to delete the student | decision: allow; subject: none; action: cancel; resource: the delete; purpose: none; condition: in the delete a student  sub-flow_ the registrar decides not to delete the student}
43,The system displays each student and any grade that was previously assigned for the offering.,1,{decision: allow; subject: system; action: display; resource: student; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: grade; purpose: none; condition: none}
44,"If the Registrar selected “Delete a Professor”, the Delete a Professor subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: delete a professor subflow; purpose: none; condition: registrar selected “delete a professor”}
45,"If the use case was successful, student grades for a course offering are updated.",1,{decision: allow; subject: none; action: update; resource: student grades; purpose: none; condition: use case was successful}
46,The system removes the professor from teaching the de-selected course offerings.,1,{decision: allow; subject: system; action: remove; resource: professor; purpose: none; condition: none}
47,The system prompts the Registrar to confirm the deletion of the professor.,1,{decision: allow; subject: registrar; action: confirm; resource: deletion of the professor; purpose: none; condition: none}
48,"If the Student selected “update a schedule”, the Update a Schedule subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: update a schedule subflow; purpose: none; condition: student selected “update a schedule”}
49,"If the use case was successful, the student schedule is created, updated, or deleted.",1,{decision: allow; subject: none; action: create; resource: student schedule; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: student schedule; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: student schedule; purpose: none; condition: use case was successful}
50,The system provides the Registrar with the new professor id.,1,{decision: allow; subject: system; action: provide; resource: new professor id; purpose: none; condition: none}
51,The system provides the Registrar with the new student id.,1,{decision: allow; subject: system; action: provide; resource: new student id; purpose: none; condition: none}
52,The Professor may also change the grade for a student by entering a new grade.,1,{decision: allow; subject: professor; action: change; resource: grade; purpose: none; condition: none}
53,The Student may update the course selections on the current selection by deleting and adding new course offerings.,1,{decision: allow; subject: student; action: update; resource: course selections; purpose: none; condition: none}
54,This use case allows a Student to register for course offerings in the current semester.,1,{decision: allow; subject: student; action: register; resource: course offerings in the current semester; purpose: none; condition: none}
55,"Once the Registrar updates the necessary information, the system updates the student information.",1,{decision: allow; subject: system; action: update; resource: student information; purpose: none; condition: registrar updates the necessary information}
56,Only the Registrar is allowed to change any student information.,1,{decision: allow; subject: registrar; action: change; resource: any student information; purpose: none; condition: none}
57,The Registrar verifies the deletion.,1,{decision: allow; subject: registrar; action: verify; resource: deletion; purpose: none; condition: none}
58,The system deletes the professor from the system.,1,{decision: allow; subject: system; action: delete; resource: professor; purpose: none; condition: none}
59,"If the Registrar selected “update a professor”, the Update a Professor  subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: update a professor subflow; purpose: none; condition: registrar selected “update a professor”}
60,"The Student acknowledges the error, and the Basic Flow is re- started at the beginning.",1,{decision: allow; subject: student; action: acknowledge; resource: error; purpose: none; condition: none | decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: none}
61,"The system must prevent students from changing any schedules other than their own, and professors from modifying assigned course offerings for other professors.",1,{decision: deny; subject: students; action: change; resource: any other schedules; purpose: none; condition: none | decision: allow; subject: students; action: change; resource: schedules; purpose: none; condition: none | decision: deny; subject: professors; action: modify; resource: assigned course offerings; purpose: none; condition: none}
62,"For each semester, there is a period of time that students can change their schedule.",1,{decision: allow; subject: students; action: change; resource: schedule; purpose: none; condition: none}
63,"If the use case was successful, the course offerings a Professor is scheduled to teach have been updated.",1,{decision: allow; subject: none; action: update; resource: course offerings a professor is scheduled to teach; purpose: none; condition: use case was successful}
64,"Once the student has made his or her selections, the system updates the schedule for the Student using the selected course offerings.",1,{decision: allow; subject: system; action: update; resource: schedule; purpose: none; condition: student has made his or her selections}
65,"This use case starts when a Student wishes to register for course offerings, or to change his or her existing course schedule.",1,{decision: allow; subject: none; action: start; resource: use case; purpose: none; condition: student wishes to register for course offerings_ or to change his or her existing course schedule}
66,"When the use case starts, if it is determined that registration for the current semester has been closed, a message is displayed to the Student, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: it is determined that registration for the current semester has been closed | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: it is determined that registration for the current semester has been closed}
67,"The course offering is marked as ""enrolled in"" in the schedule.",1,{decision: allow; subject: none; action: mark; resource: course offering; purpose: none; condition: none}
68,This use case allows a Student to view his or her report card for the previously completed semester.,1,{decision: allow; subject: student; action: view; resource: report card; purpose: none; condition: none}
69,The student is added to the system.,1,{decision: allow; subject: none; action: add; resource: student; purpose: none; condition: none}
70,This use case allows the Registrar to maintain professor information in the registration system.,1,{decision: allow; subject: registrar; action: maintain; resource: professor information in the registration system; purpose: none; condition: none}
71,The system requests that the Registrar enter the student information.,1,{decision: allow; subject: registrar; action: enter; resource: student information; purpose: none; condition: none}
72,"If so, the system commits the course offering for each schedule that contains it.",1,{decision: allow; subject: system; action: commit; resource: course offering; purpose: none; condition: none}
73,"Once the Registrar updates the necessary information, the system updates the professor record.",1,{decision: allow; subject: system; action: update; resource: professor record; purpose: none; condition: registrar updates the necessary information}
74,"If it is, then a message is displayed to the Registrar, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: none | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: none}
75,The system calculates the tuition owed by each student for his current semester schedule and sends a transaction to the Billing System.,1,{decision: allow; subject: system; action: calculate; resource: tuition owed by each student for his current semester schedule; purpose: none; condition: none | decision: allow; subject: system; action: send; resource: transaction; purpose: none; condition: none}
76,The Student can also update or delete course selections if changes are made within the add or drop period at the beginning of the semester.,1,{decision: allow; subject: students; action: update; resource: course selections; purpose: none; condition: changes are made within the add or drop period at the beginning of the semester | decision: allow; subject: students; action: delete; resource: course selections; purpose: none; condition: changes are made within the add or drop period at the beginning of the semester}
77,Professors cannot change the course offerings they teach after registration for the current semester has been closed.,1,{decision: deny; subject: professor; action: change; resource: course offerings they teach; purpose: none; condition: registration for the current semester has been closed}
78,"At the beginning of each semester, students may request a course catalogue containing a list of course offerings for the semester.",1,{decision: allow; subject: students; action: request; resource: course catalogue; purpose: none; condition: none}
79,"If, in the Basic Flow, the system cannot find any grade information from the previous semester for the Student, a message is displayed.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: in the basic flow_ the system cannot find any grade information from the previous semester for the student}
80,"If the system is unable to communicate with the Course Catalog System, the system will display an error message to the Student.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: system is unable to communicate with the course catalog system}
81,The system requests that the Registrar enter the professor id.,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
82,"In addition, the professors will be able to record the grades for the students in each class.",1,{decision: allow; subject: professors; action: record; resource: grades; purpose: none; condition: none}
83,The system retrieves a list of all students who were registered for the course offering.,1,{decision: allow; subject: system; action: retrieve; resource: list of all students who were registered for the course offering; purpose: none; condition: none}
84,"This use case starts when the Registrar wishes to add, change, possibly and possibly delete student information in the system.",1,{decision: allow; subject: registrar; action: add; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: change; resource: student; purpose: none; condition: none | decision: allow; subject: registrar; action: delete; resource: student; purpose: none; condition: none}
85,The Registrar enters the professor id.,1,{decision: allow; subject: registrar; action: enter; resource: professor id; purpose: none; condition: none}
86,This use case allows a Registrar to close the registration process.,1,{decision: allow; subject: registrar; action: close; resource: registration process; purpose: none; condition: none}
87,"If the use case was successful, the professor information is added, updated, or deleted from the system.",1,{decision: allow; subject: none; action: add; resource: professor information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: professor information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: professor information; purpose: none; condition: use case was successful}
88,The system retrieves and displays the list of course offerings the professor is eligible to teach for the current semester.,1,{decision: allow; subject: system; action: retrieve; resource: list of course offerings; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of course offerings the professor is eligible to teach for the current semester; purpose: none; condition: none}
89,The system requests that the Registrar enter the student id,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
90,The system retrieves and displays the grade information for each of the course offerings the Student completed during the previous semester.,1,{decision: allow; subject: system; action: retrieve; resource: grade information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: grade information; purpose: none; condition: none}
91,"The system verifies that the selected offerings do not conflict (i.e., have the same dates and times) with each other or any course offerings that the professor has previously signed up to teach.",1,{decision: allow; subject: system; action: verify; resource: selected offerings; purpose: none; condition: none}
92,The Student selects the course offerings to add from the list of available course offerings.,1,{decision: allow; subject: student; action: select; resource: course offerings; purpose: add; condition: none}
93,The system will also indicate which are the conflicting courses.,1,{decision: allow; subject: system; action: indicate; resource: conflicting courses; purpose: none; condition: none}
94,"When the use case starts, if it is determined that registration for the current semester has been closed, a message is displayed to the Professor, and the use case terminates.",1,{decision: allow; subject: none; action: display; resource: message; purpose: none; condition: it is determined that registration for the current semester has been closed | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: it is determined that registration for the current semester has been closed}
95,"Information about each course, such as professor, department, and prerequisites, will be included to help students make informed decisions.",1,{decision: allow; subject: none; action: include; resource: professor; purpose: help students make informed decisions; condition: none | decision: allow; subject: none; action: include; resource: department; purpose: help students make informed decisions; condition: none | decision: allow; subject: none; action: include; resource: prerequisites; purpose: help students make informed decisions; condition: none}
96,This use case allows a Professor to select the course offerings from the course catalog for the courses that he or she is eligible for and wishes to teach in the upcoming semester.,1,{decision: allow; subject: professor; action: select; resource: course offerings; purpose: none; condition: none}
97,The system then adds the Student to the selected course offering.,1,{decision: allow; subject: system; action: add; resource: student; purpose: none; condition: none}
98,"If the schedule contains “enrolled in” course offerings, the Student must be removed from the course offering.",1,{decision: allow; subject: none; action: remove; resource: student; purpose: none; condition: schedule contains “enrolled in” course offerings}
99,"This includes adding, modifying, and deleting professors from the system.",1,{decision: allow; subject: none; action: add; resource: professors; purpose: none; condition: none | decision: allow; subject: none; action: modify; resource: professors; purpose: none; condition: none | decision: allow; subject: none; action: delete; resource: professors; purpose: none; condition: none}
100,The Registrar makes the desired changes to the professor information.,1,{decision: allow; subject: registrar; action: make; resource: desired changes; purpose: none; condition: none}
101,The system retrieves a list of available course offerings from the Course Catalog System and displays the list to the Student.,1,{decision: allow; subject: system; action: retrieve; resource: list of available course offerings; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: list of available course offerings; purpose: none; condition: none}
102,Professors must be able to access the on-line system to indicate which courses they will be teaching.,1,{decision: allow; subject: professors; action: access; resource: on-line system; purpose: indicate which courses professors will be teaching; condition: none}
103,"When the Student indicates that he or she is done viewing the grades, the use case terminates.",1,{decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: student indicates that he or she is done viewing the grades}
104,"If a course fills up during the actual registration process, the student must be notified of the change before submitting the schedule for processing.",1,{decision: allow; subject: none; action: notify; resource: student; purpose: none; condition: course fills up during the actual registration process}
105,Students cannot register for course offerings after registration for the current semester has been closed.,1,{decision: deny; subject: students; action: register; resource: course offerings; purpose: none; condition: registration for the current semester has been closed}
106,"If the Registrar selected “Delete a Student”, the Delete a Student  subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: delete a student  subflow; purpose: none; condition: registrar selected “delete a student”}
107,The new system will access course information from the legacy database but will not update it.,1,{decision: allow; subject: new system; action: access; resource: course information; purpose: none; condition: none | decision: deny; subject: new system; action: update; resource: course information; purpose: none; condition: none}
108,The system prompts the Registrar to confirm the deletion of the student.,1,{decision: allow; subject: registrar; action: confirm; resource: deletion of the student; purpose: none; condition: none}
109,The first available alternate course offerings will be selected.,1,{decision: allow; subject: none; action: select; resource: first available alternate course offerings; purpose: none; condition: none}
110,The system retrieves and displays the professor information.,1,{decision: allow; subject: system; action: retrieve; resource: professor information; purpose: none; condition: none | decision: allow; subject: system; action: display; resource: professor information; purpose: none; condition: none}
111,The course offerings not marked as “enrolled in” are marked as “selected” in the schedule.,1,{decision: allow; subject: none; action: mark; resource: course offerings not marked as “enrolled in”; purpose: none; condition: none}
112,"If the Registrar selected “Add a Professor”, the Add a Professor  subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: add a professor subflow; purpose: none; condition: registrar selected “add a professor”}
113,Students must be able to access the system during this time to add or drop courses.,1,{decision: allow; subject: students; action: access; resource: system; purpose: add courses; condition: none | decision: allow; subject: students; action: access; resource: system; purpose: drop courses; condition: none}
114,The system deletes the Schedule.,1,{decision: allow; subject: system; action: delete; resource: schedule; purpose: none; condition: none}
115,"Once the Registrar provides the requested information, one of the sub flows is executed.",1,{decision: allow; subject: none; action: execute; resource: one of the sub flows; purpose: none; condition: registrar provides the requested information}
116,"Once the Student acknowledges the message, the use case terminates.",1,{decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: student acknowledges the message}
117,"For each course offering, the system closes all course offerings.",1,{decision: allow; subject: system; action: close; resource: all course offerings; purpose: none; condition: none}
118,The Close Registration processing cannot be performed if registration is in progress.,1,{decision: allow; subject: none; action: perform; resource: close registration processing; purpose: none; condition: registration is in progress}
119,The Registrar makes the desired changes to the student information.,1,{decision: allow; subject: registrar; action: make; resource: desired changes; purpose: none; condition: none}
120,The Registrar enters the student id.,1,{decision: allow; subject: registrar; action: enter; resource: student id; purpose: none; condition: none}
121,"The Billing System will send the bill to the students, which will include a copy of their final schedule.",1,{decision: allow; subject: billing system; action: send; resource: bill; purpose: none; condition: none}
122,"If, in the Delete A Schedule sub-flow, the Student decides not to delete the schedule, the delete is cancelled, and the Basic Flow is re-started at the beginning.",1,{decision: allow; subject: none; action: cancel; resource: the delete; purpose: none; condition: in the delete a schedule sub-flow_ the student decides not to delete the schedule | decision: allow; subject: none; action: re-start; resource: basic flow; purpose: none; condition: in the delete a schedule sub-flow_ the student decides not to delete the schedule}
123,"Once the student has made his or her selections, the system creates a schedule for the Student containing the selected course offerings.",1,{decision: allow; subject: system; action: create; resource: schedule; purpose: none; condition: student has made his or her selections}
124,This use case starts when the Registrar requests that the system close registration.,1,{decision: allow; subject: none; action: start; resource: use case; purpose: none; condition: registrar requests that the system close registration}
125,"If the Student selected “Create a Schedule”, the Create  a Schedule subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: create a schedule subflow; purpose: none; condition: student selected “create a schedule”}
126,"The Student acknowledges the error message, and the use case terminates.",1,{decision: allow; subject: student; action: acknowledge; resource: error message; purpose: none; condition: none | decision: allow; subject: none; action: terminate; resource: use case; purpose: none; condition: none}
127,"If the course offerings do not have at least three students at this point (some may have been added as a result of leveling), then the system cancels the course offering.",1,{decision: allow; subject: system; action: cancel; resource: course offerings; purpose: none; condition: course offerings do not have at least three students at this point (some may have been added as a result of leveling)}
128,"If the systems find a schedule conflict when trying to establish the course offerings the Professor should take, the system will display an error message indicating that a schedule conflict has occurred.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: systems find a schedule conflict when trying to establish the course offerings the professor should take}
129,"If the Student selected “Delete a Schedule”, the Delete a Schedule subflow is executed.",1,{decision: allow; subject: none; action: execute; resource: delete a schedule subflow; purpose: none; condition: student selected “delete a schedule”}
130,"If the use case was successful, the student information is added, updated, or deleted from the system.",1,{decision: allow; subject: none; action: add; resource: student information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: update; resource: student information; purpose: none; condition: use case was successful | decision: allow; subject: none; action: delete; resource: student information; purpose: none; condition: use case was successful}
131,"If, in the Basic Flow, the Professor did not teach any course offerings in the previous semester, the system will display an error message.",1,{decision: allow; subject: system; action: display; resource: error message; purpose: none; condition: in the basic flow_ the professor did not teach any course offerings in the previous semester}
132,"If, in the Basic Flow, the actor enters an invalid name possibly and possibly password, the system displays an error message.",1,{decision: allow; subject: system; action: display; resource: error message; condition: if in the basic flow the actor enters an invalid name possibly and possibly password; purpose: none}
133,The actor enters his or her name and password.,1,{decision: allow; subject: actor; action: enter; resource: password; condition: none; purpose: none | decision: allow; subject: actor; action: enter; resource: name; condition: none; purpose: none}
134,"If the system is unable to communicate with the Billing System, the system will attempt to re-send the request after a specified period.",1,{decision: allow; subject: system; action: re-send; resource: request; condition: system is unable to communicate with the billing system; purpose: none}
